{"meta":{"title":"Esse Quam Videri","subtitle":null,"description":null,"author":"y0ngh00n","url":"https://y0ngh00n.github.io"},"pages":[],"posts":[{"title":"Ubuntu 원격 서버 연동하기","slug":"dl-server","date":"2018-03-26T13:45:20.000Z","updated":"2018-03-26T14:40:34.375Z","comments":true,"path":"2018/03/26/dl-server/","link":"","permalink":"https://y0ngh00n.github.io/2018/03/26/dl-server/","excerpt":"","text":"ssh를 이용한 GPU 원격 서버 연동Multi-hop SSH서버 이용을 위해서는 외부서버 접속 -&gt; 내부서버 접속이 필요한 상황이다. 첫번째 터미널 $ ssh -l username -L 6000:inner_ip:22 outer_ip cat - //6000:포트 번호 Pycharm remote interpreter 연동첫번째 터미널을 유지한 상태에서… 프로젝트 remote interpreter 정의참고: https://stackoverflow.com/questions/34359415/pycharm-ssh-interpter-no-such-file-or-directory Here server C is the target machine and server B the gate machine. And then in the remote interpreter configuration. (File&gt;Setting&gt;Projet&gt;project interpreter&gt;click on small wheel button&gt;add remote): host: localhostport: 6000user: user_serverC (for me same as user_serverB) &lt;주의&gt; path mappings를 설정해준다.local: 내 프로젝트 디렉토리remote: 원격 서버에 배포할 디렉토리 deployment(배포) 설정root 디렉토리가 mappings의 위치가 같도록 설정해준다. deploy &amp; run coderemote에 local의 파일이 있어야 run이 된다. jupyter notebook 연동참고: https://glauffer.github.io/2017-04-01-remote-host-a-jupyter-notebook-via-multihop-ssh/첫번째 터미널을 유지한 상태에서… 두번째 터미널… $ ssh -l username -L 8888:localhost:8888 -p6000 localhost //8888:jupyter port, localhost:host이름 $ ### password login ### $ jupyter notebook --no-browser --port=8888 TODO: pycharm에서 jupyter notebook의 실행이 안된다.","categories":[{"name":"Study","slug":"Study","permalink":"https://y0ngh00n.github.io/categories/Study/"},{"name":"DeepLearning","slug":"Study/DeepLearning","permalink":"https://y0ngh00n.github.io/categories/Study/DeepLearning/"}],"tags":[{"name":"server","slug":"server","permalink":"https://y0ngh00n.github.io/tags/server/"},{"name":"DL","slug":"DL","permalink":"https://y0ngh00n.github.io/tags/DL/"}]},{"title":"linux 하드웨어 정보 명령어","slug":"linux","date":"2018-03-25T07:01:40.000Z","updated":"2018-03-26T14:32:40.811Z","comments":true,"path":"2018/03/25/linux/","link":"","permalink":"https://y0ngh00n.github.io/2018/03/25/linux/","excerpt":"","text":"리눅스 하드웨어 정보 확인CPU 정보 확인$ cat /proc/cpuinfo | grep \"model name\" | head -1 메모리 정보 확인$ cat /proc/meminfo 디스크 용량 확인$ df -h PCI 정보 확인$ lspci /* 모든 PCI 정보 출력 */ $ lspci | grep RAID /* RAID 모델명 확인 */ $ lspci | grep Ethernet /* 랜카드 모델명 확인 */ $ lspci | grep VGA /* 그래픽 모델명 확인 */","categories":[{"name":"Study","slug":"Study","permalink":"https://y0ngh00n.github.io/categories/Study/"},{"name":"OS","slug":"Study/OS","permalink":"https://y0ngh00n.github.io/categories/Study/OS/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://y0ngh00n.github.io/tags/linux/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-03-22T03:00:46.839Z","updated":"2018-03-26T13:39:30.225Z","comments":true,"path":"2018/03/22/hello-world/","link":"","permalink":"https://y0ngh00n.github.io/2018/03/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Blog","slug":"Blog","permalink":"https://y0ngh00n.github.io/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://y0ngh00n.github.io/tags/Hexo/"}]}]}